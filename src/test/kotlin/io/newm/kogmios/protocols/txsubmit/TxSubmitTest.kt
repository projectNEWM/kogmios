package io.newm.kogmios.protocols.txsubmit

import com.google.common.truth.Truth.assertThat
import io.newm.kogmios.createTxSubmitClient
import io.newm.kogmios.protocols.messages.EvaluationFailureTxResult
import io.newm.kogmios.protocols.messages.EvaluationResult
import io.newm.kogmios.protocols.messages.SubmitFail
import io.newm.kogmios.protocols.messages.SubmitSuccess
import kotlinx.coroutines.runBlocking
import org.junit.jupiter.api.Disabled
import org.junit.jupiter.api.Test

class TxSubmitTest {
    @Test
    fun `test SubmitTx old tx`() = runBlocking {
        createTxSubmitClient(
            websocketHost = "ogmios-kogmios-9ab819.us1.demeter.run",
            websocketPort = 443,
            secure = true,
        ).use { client ->
            val connectResult = client.connect()
            assertThat(connectResult).isTrue()
            assertThat(client.isConnected).isTrue()

            val response = client.submit(
                "83a400848258208883fa7cc2a7a1de8e1174541f29224b9086a57a4d413dca4833619ddc8f314e00825820f2262a007f13b638132817bd96ac5e598c5959d57e0038f5d1c8dfb0c967e5ef008258208883fa7cc2a7a1de8e1174541f29224b9086a57a4d413dca4833619ddc8f314e01825820ca90bb5463e0817e86bdfdcba8a96015a78ffeec0c0084813336d2b9650c29b709018482581d60e4995af54cc0e3ab8ccd0333840dfdcb7794c73e2eeba8e30906cb661ab2e133c082581d6016db1fb94af61989d8672b111203e6ba19bf354823f48aeb758244b81a2c8650c0825839000c1b05025ce45d2329e0e8c0382a2a3dabe4345079f725346e49762dfaddb4bf064802bdf863385e7d2c22c467c474880beb7b5e9dd4fb33821a0011b0dea1581c698a6ea0ca99f315034072af31eaac6ec11fe8558d3f48e9775aab9da14574445249501a3baa0c4082581d7047a9b7a5a73221ec30b9938b847bd323e46a4423985aabdd2a9a4fe6821a00101ccea1581c698a6ea0ca99f315034072af31eaac6ec11fe8558d3f48e9775aab9da14574445249501b000000a33df2ec17021a00030c35031a03ea8d18a2008582582035030cd6541d94d415ae59cbdf00bbdc1d4b1c6356bb135a8495d556d117fb8d584049919a07907e6e9dc62a796869159a21101ae7542c0f77bc2682d15d7e39364638fb19d1c857432038db730130c2948909fd5a2f15f7c59bec075e5d05e1ac058258201ccd62a659fe0665f55239503056252c19ff9b56000994e958f19214349996fd5840122bee6271ead4222fd22f7df0ff71b00f57b106930f8ce60714f9250522ad75977643c05fabdfb7355aa2bd68d68bead2f3be32192255748464090bf54c8d0b8258208a6b5c4b896781e20262a033c46436dcb8d396281d26620ca99fef00e060470358402943574009a587563ed4cf4b0e10aa4c6339034c768753b451a3ae1042f4e2555424852d22cb1d5b4cbdcf6be7fc9a9239cefff9bc323ceac68e146656564300825820f6c2c6b8acb78586c0ac0e0c1c84dbff594c73dae3b5d3f7fef0718dd50c414a5840d3241d0c4fa8aebe485a3c5a41febb39549a3888dd31bed2e35cff524f022f6bbc25b972068ce3da7651a1627cab0b6924231e3eec1a095dd18cd71660828f08825820081aebcf44f5be3075188e6121352f136fd0825ad0bd13705a8477bc5883699c5840a3b73c85788e6a65f3636929564fac8f3b79db6add2ae106759ff52f800a38fc3b4051f8998d45781c73d66637903a53eba9165d2ac8baecd94af80d62d37e0d01818201828200581ce4995af54cc0e3ab8ccd0333840dfdcb7794c73e2eeba8e30906cb668200581cc25b5e6bb88381521d184a7b440f8159dbf1fa257a0d50cc779d4debf6",
            )
            assertThat(response).isNotNull()
            assertThat(response.result).isInstanceOf(SubmitFail::class.java)
            println(response.result)
        }
    }

    @Test
    @Disabled
    fun `test SubmitTx valid tx`() = runBlocking {
        createTxSubmitClient(
            websocketHost = "ogmios-kogmios-9ab819.us1.demeter.run",
            websocketPort = 443,
            secure = true,
        ).use { client ->
            val connectResult = client.connect()
            assertThat(connectResult).isTrue()
            assertThat(client.isConnected).isTrue()

            val response = client.submit(
                "84a4008282582065a390ff705fcf738c7c0fc490ced778f06814f268346618f1c8af2d757696470082582065a390ff705fcf738c7c0fc490ced778f06814f268346618f1c8af2d7576964701018282581d60da0eb5ed7611482ec5089b69d870e0c56c1c45180256112398e0835b1a000f424082581d60da0eb5ed7611482ec5089b69d870e0c56c1c45180256112398e0835b821b0001ad34bfdbcbcba1581c8d18d786e92776c824607fd8e193ec535c79dc61ea2405ddf3b09fe3a145707266697401021a0002beb1031a03ed1803a100818258204499320a77997987955eadba91721d5be54ca36536c5448009e822ba3f882d695840f36654ed91e88aeba1d5c60956c097621684b321b1605cea5f948d62c8055859ff54e4178ec08d720884d51221f291d7519a4914ad951bf0d356c387f239230bf5f6",
            )
            assertThat(response).isNotNull()
            assertThat(response.result).isInstanceOf(SubmitSuccess::class.java)
            println(response.result)
        }
    }

    @Test
    @Disabled
    fun `test EvaluateTx valid tx`() = runBlocking {
        createTxSubmitClient(
            websocketHost = "ogmios-kogmios-9ab819.us1.demeter.run",
            websocketPort = 443,
            secure = true,
        ).use { client ->
            val connectResult = client.connect()
            assertThat(connectResult).isTrue()
            assertThat(client.isConnected).isTrue()

            val response = client.evaluate(
                "84ab0082825820859adaaeebd3c4b2d842a2a1eef62c6d7bff7ef199c9521370b7cda3587adc0300825820859adaaeebd3c4b2d842a2a1eef62c6d7bff7ef199c9521370b7cda3587adc03010d81825820949d496d900345508ed6e0b27b2a79a284fd3c37b7a3b7b01cece027fe1577aa0212828258200b4c56fdae7c23748c837e2443dfebebd020239c107aed9b227851ebabe4a829018258200b4c56fdae7c23748c837e2443dfebebd020239c107aed9b227851ebabe4a829020184a300581d7087692773cf94c4542105946daebe7afeb9100efb7a108158a2f9749c011a0018fda8028201d8185866d8799f581c602a7e54f9c569c770ba6f732af3077d8b06e14b84abc8d0151635d8581c3ab25c853f0f188f43b34b2df5cb98737a4de7e19028ec9d1a414a55464e45574d5f30581c9bb822cdf2c6c79657c0e8ec24308487dbd35750c084e271620d9d8040ffa200581d609bb822cdf2c6c79657c0e8ec24308487dbd35750c084e271620d9d8001821a000fc8a0a1581c3ab25c853f0f188f43b34b2df5cb98737a4de7e19028ec9d1a414a55a1464e45574d5f3001a300581d704347ac2bcda3f6516082cba79661714b836e68eba49d99429d73eec801821a00152d2ca1581cfd3a69817fe5b9ff39fb2fac2be2c7f2007746e827ee31868fe667cda1454e45574d5f01028201d8185829d8799f581c3ab25c853f0f188f43b34b2df5cb98737a4de7e19028ec9d1a414a5501454e45574d5fffa200581d608082e2be035d27cf02455606df19308b5f7022490f8a61f22e158146011a0c1498d710a200581d608082e2be035d27cf02455606df19308b5f7022490f8a61f22e158146011a003877eb111a0013d355021a000d378e0e83581c2eb8686d882a0eddc9c7f68ece8f198f973ce90477b51ca017f2a25d581c4c1017ed05f703f6cf31c6a743f2c69534dbe4846e0d51ed4cb24b85581c8082e2be035d27cf02455606df19308b5f7022490f8a61f22e15814609a1581c3ab25c853f0f188f43b34b2df5cb98737a4de7e19028ec9d1a414a55a1464e45574d5f30010b582090fc0705a1a850814b9b3a8c86db1ff3e215bc99160f5af34a016d11e8f2fd2607582033021058cf5994f8993aaf9884c554c15500d2f7bdca95d28be8dd4244e7331ea2008382582056ca6b314617c38c921a05885f055e9b470aa793dd5d0721bee45d7192a6f0f55840b81356ecb164fd428967937a8ca21683a940958e9fabba589f90ce0c7deebd6c695571605ab59d3d32ac2337ab14d5185bb62732111eccc6754cf6d132819f0e825820161dfc32da5b2988f1a7f31737fddda7aed8d17c0935314a671c48034973d7fe58409b9637cc0a8a9edb27050586f92f50e4272f6402f39072ceca67942bb15d3ed2eaeecff5dc23ed8c4ac6458ac167be6e41152ccf59df3d69b5b1609913957206825820fc993172aa4ff02f2dec9985a6a359fb69a0ce80c85a06b3b195e54e9d0e18ae5840f411a24e5a29892b8d0c03a300e9554aee54a666e866075b3e7cf8cb148c32acb96a79ea6cfe32536f28c2bf78c4f4bef2c7a1f6939cf5f926810535b102b60c0582840000d87980821a002b990a1a2e7fb862840100d8799f581c3ab25c853f0f188f43b34b2df5cb98737a4de7e19028ec9d1a414a5500454e45574d5fff821a004a68311a4e3383c8f5d90103a100a11902d1a278383361623235633835336630663138386634336233346232646635636239383733376134646537653139303238656339643161343134613535a1664e45574d5f30b8186b616c62756d5f7469746c656d42696767657220447265616d73676172746973747381a1646e616d65644d55525369636f70797269676874827818c2a92032303232204d6f6f647377696e677a204d757a696b7829e284972032303232204d6f6f647377696e677a2043727970746f6d656469612047726f7570204c4c4371636f756e7472795f6f665f6f726967696e6d556e69746564205374617465736b6469737472696275746f726f68747470733a2f2f6e65776d2e696f686578706c696369746566616c73656566696c657382a3696d65646961547970656a617564696f2f666c6163646e616d656d42696767657220447265616d7363737263783061723a2f2f503134316f305244416a53596c565167544467484e414f5251546b4d5949564370726d445f644b4d567373a3696d65646961547970656f6170706c69636174696f6e2f706466646e616d65782153747265616d696e6720526f79616c74792053686172652041677265656d656e7463737263783061723a2f2f545779467778654f4978534c77707963556853686e677638687069616c41364445515045484a586244706f6667656e726573826748697020486f706352617065696d616765783061723a2f2f4375504659324c6e37795555684a583039473533306b645066393365476841566c686a727452374a68357764697372636f515a2d4e57372d32322d3230303435656c696e6b73a66654696b546f6b782768747470733a2f2f7777772e74696b746f6b2e636f6d2f406d6f6f647377696e677a6d757a696b6e6172746973745f74776974746572781868747470733a2f2f747769747465722e636f6d2f4d5552536866616365626f6f6b782e68747470733a2f2f7777772e66616365626f6f6b2e636f6d2f6d6f6f647377696e677a63727970746f6d6564696169696e7374616772616d782968747470733a2f2f7777772e696e7374616772616d2e636f6d2f6d6f6f647377696e677a6d757a696b6774776974746572782368747470733a2f2f747769747465722e636f6d2f6d6f6f647377696e677a6d757a696b6777656273697465781a687474703a2f2f4d6f6f647377696e677a4d757a696b2e636f6d696c797269636973747381644d555253726d6173746572696e675f656e67696e656572654162797373696d65646961547970656a696d6167652f776562706c6d69785f656e67696e656572654162797373646d6f6f64694665656c20476f6f64766d757369635f6d657461646174615f76657273696f6e01646e616d65744d555253202d2042696767657220447265616d736870726f64756365726541627973736c72656c656173655f747970656653696e676c656d736f6e675f6475726174696f6e665054344d30536a736f6e675f7469746c656d42696767657220447265616d736c747261636b5f6e756d626572016d76697375616c5f6172746973746541627973736776657273696f6e01",
            )
            assertThat(response).isNotNull()
            assertThat(response.result).isInstanceOf(EvaluationResult::class.java)
            println(response.result)
        }
        // EvaluationResult(["spend:0": ExecutionUnits(memory=2857226, steps=780122210), "mint:0": ExecutionUnits(memory=4876337, steps=1311998920)])
        // This is a spend + mint transaction running 2 contracts
        // {
        //    "type": "Witnessed Tx BabbageEra",
        //    "description": "Ledger Cddl Format",
        //    "cborHex": "84ab0082825820859adaaeebd3c4b2d842a2a1eef62c6d7bff7ef199c9521370b7cda3587adc0300825820859adaaeebd3c4b2d842a2a1eef62c6d7bff7ef199c9521370b7cda3587adc03010d81825820949d496d900345508ed6e0b27b2a79a284fd3c37b7a3b7b01cece027fe1577aa0212828258200b4c56fdae7c23748c837e2443dfebebd020239c107aed9b227851ebabe4a829018258200b4c56fdae7c23748c837e2443dfebebd020239c107aed9b227851ebabe4a829020184a300581d7087692773cf94c4542105946daebe7afeb9100efb7a108158a2f9749c011a0018fda8028201d8185866d8799f581c602a7e54f9c569c770ba6f732af3077d8b06e14b84abc8d0151635d8581c3ab25c853f0f188f43b34b2df5cb98737a4de7e19028ec9d1a414a55464e45574d5f30581c9bb822cdf2c6c79657c0e8ec24308487dbd35750c084e271620d9d8040ffa200581d609bb822cdf2c6c79657c0e8ec24308487dbd35750c084e271620d9d8001821a000fc8a0a1581c3ab25c853f0f188f43b34b2df5cb98737a4de7e19028ec9d1a414a55a1464e45574d5f3001a300581d704347ac2bcda3f6516082cba79661714b836e68eba49d99429d73eec801821a00152d2ca1581cfd3a69817fe5b9ff39fb2fac2be2c7f2007746e827ee31868fe667cda1454e45574d5f01028201d8185829d8799f581c3ab25c853f0f188f43b34b2df5cb98737a4de7e19028ec9d1a414a5501454e45574d5fffa200581d608082e2be035d27cf02455606df19308b5f7022490f8a61f22e158146011a0c1498d710a200581d608082e2be035d27cf02455606df19308b5f7022490f8a61f22e158146011a003877eb111a0013d355021a000d378e0e83581c2eb8686d882a0eddc9c7f68ece8f198f973ce90477b51ca017f2a25d581c4c1017ed05f703f6cf31c6a743f2c69534dbe4846e0d51ed4cb24b85581c8082e2be035d27cf02455606df19308b5f7022490f8a61f22e15814609a1581c3ab25c853f0f188f43b34b2df5cb98737a4de7e19028ec9d1a414a55a1464e45574d5f30010b582090fc0705a1a850814b9b3a8c86db1ff3e215bc99160f5af34a016d11e8f2fd2607582033021058cf5994f8993aaf9884c554c15500d2f7bdca95d28be8dd4244e7331ea2008382582056ca6b314617c38c921a05885f055e9b470aa793dd5d0721bee45d7192a6f0f55840b81356ecb164fd428967937a8ca21683a940958e9fabba589f90ce0c7deebd6c695571605ab59d3d32ac2337ab14d5185bb62732111eccc6754cf6d132819f0e825820161dfc32da5b2988f1a7f31737fddda7aed8d17c0935314a671c48034973d7fe58409b9637cc0a8a9edb27050586f92f50e4272f6402f39072ceca67942bb15d3ed2eaeecff5dc23ed8c4ac6458ac167be6e41152ccf59df3d69b5b1609913957206825820fc993172aa4ff02f2dec9985a6a359fb69a0ce80c85a06b3b195e54e9d0e18ae5840f411a24e5a29892b8d0c03a300e9554aee54a666e866075b3e7cf8cb148c32acb96a79ea6cfe32536f28c2bf78c4f4bef2c7a1f6939cf5f926810535b102b60c0582840000d87980821a002b990a1a2e7fb862840100d8799f581c3ab25c853f0f188f43b34b2df5cb98737a4de7e19028ec9d1a414a5500454e45574d5fff821a004a68311a4e3383c8f5d90103a100a11902d1a278383361623235633835336630663138386634336233346232646635636239383733376134646537653139303238656339643161343134613535a1664e45574d5f30b8186b616c62756d5f7469746c656d42696767657220447265616d73676172746973747381a1646e616d65644d55525369636f70797269676874827818c2a92032303232204d6f6f647377696e677a204d757a696b7829e284972032303232204d6f6f647377696e677a2043727970746f6d656469612047726f7570204c4c4371636f756e7472795f6f665f6f726967696e6d556e69746564205374617465736b6469737472696275746f726f68747470733a2f2f6e65776d2e696f686578706c696369746566616c73656566696c657382a3696d65646961547970656a617564696f2f666c6163646e616d656d42696767657220447265616d7363737263783061723a2f2f503134316f305244416a53596c565167544467484e414f5251546b4d5949564370726d445f644b4d567373a3696d65646961547970656f6170706c69636174696f6e2f706466646e616d65782153747265616d696e6720526f79616c74792053686172652041677265656d656e7463737263783061723a2f2f545779467778654f4978534c77707963556853686e677638687069616c41364445515045484a586244706f6667656e726573826748697020486f706352617065696d616765783061723a2f2f4375504659324c6e37795555684a583039473533306b645066393365476841566c686a727452374a68357764697372636f515a2d4e57372d32322d3230303435656c696e6b73a66654696b546f6b782768747470733a2f2f7777772e74696b746f6b2e636f6d2f406d6f6f647377696e677a6d757a696b6e6172746973745f74776974746572781868747470733a2f2f747769747465722e636f6d2f4d5552536866616365626f6f6b782e68747470733a2f2f7777772e66616365626f6f6b2e636f6d2f6d6f6f647377696e677a63727970746f6d6564696169696e7374616772616d782968747470733a2f2f7777772e696e7374616772616d2e636f6d2f6d6f6f647377696e677a6d757a696b6774776974746572782368747470733a2f2f747769747465722e636f6d2f6d6f6f647377696e677a6d757a696b6777656273697465781a687474703a2f2f4d6f6f647377696e677a4d757a696b2e636f6d696c797269636973747381644d555253726d6173746572696e675f656e67696e656572654162797373696d65646961547970656a696d6167652f776562706c6d69785f656e67696e656572654162797373646d6f6f64694665656c20476f6f64766d757369635f6d657461646174615f76657273696f6e01646e616d65744d555253202d2042696767657220447265616d736870726f64756365726541627973736c72656c656173655f747970656653696e676c656d736f6e675f6475726174696f6e665054344d30536a736f6e675f7469746c656d42696767657220447265616d736c747261636b5f6e756d626572016d76697375616c5f6172746973746541627973736776657273696f6e01"
        // }
        // This is the spend + mint transaction running 2 contracts for fractionalization
        // {
        //    "type": "Witnessed Tx BabbageEra",
        //    "description": "Ledger Cddl Format",
        //    "cborHex": "84ab008382582035fc6dbcd0bfc2a48949db64e62fa7fc74b916a40b546d7b65bfc830e80035d70082582035fc6dbcd0bfc2a48949db64e62fa7fc74b916a40b546d7b65bfc830e80035d701825820949d496d900345508ed6e0b27b2a79a284fd3c37b7a3b7b01cece027fe1577aa010d81825820949d496d900345508ed6e0b27b2a79a284fd3c37b7a3b7b01cece027fe1577aa021282825820892e397590da7601e4ccbe113d4d01017083f60cbb2d651f5fb722cee73b0b1201825820892e397590da7601e4ccbe113d4d01017083f60cbb2d651f5fb722cee73b0b12020183a200581d609bb822cdf2c6c79657c0e8ec24308487dbd35750c084e271620d9d8001821a00100bf8a1581c602a7e54f9c569c770ba6f732af3077d8b06e14b84abc8d0151635d8a1464e45574d5f301a05f5e100a300581d7087692773cf94c4542105946daebe7afeb9100efb7a108158a2f9749c01821a0018fda8a1581c3ab25c853f0f188f43b34b2df5cb98737a4de7e19028ec9d1a414a55a1464e45574d5f3001028201d8185866d8799f581c602a7e54f9c569c770ba6f732af3077d8b06e14b84abc8d0151635d8581c3ab25c853f0f188f43b34b2df5cb98737a4de7e19028ec9d1a414a55464e45574d5f30581c9bb822cdf2c6c79657c0e8ec24308487dbd35750c084e271620d9d8040ffa200581d609bb822cdf2c6c79657c0e8ec24308487dbd35750c084e271620d9d80011a11d6de0d10a200581d609bb822cdf2c6c79657c0e8ec24308487dbd35750c084e271620d9d80011a003c88d7111a000fc269021a000a819b0e82581c2eb8686d882a0eddc9c7f68ece8f198f973ce90477b51ca017f2a25d581c4c1017ed05f703f6cf31c6a743f2c69534dbe4846e0d51ed4cb24b8509a1581c602a7e54f9c569c770ba6f732af3077d8b06e14b84abc8d0151635d8a1464e45574d5f301a05f5e1000b582003eedcb95f6cd5f18955f2e14cfada1385446e332476d00f24e2662373145ea907582057a48f6d612c79e1a5639b6e04f2e59bd9458ba69d5775614598bf592dfd3cc4a2008382582056ca6b314617c38c921a05885f055e9b470aa793dd5d0721bee45d7192a6f0f558405eebffeff6989916813fb848b9b0eb719664e28e68277235e2da00b03a40982543c9dcb41a8ee956f374f6d49c3f5471015b1b09ab00dea427657e9ce248d108825820161dfc32da5b2988f1a7f31737fddda7aed8d17c0935314a671c48034973d7fe584074d3f4212b15ceed9625f4a556f92409f4a5f985f89196537c3e4be4eee51850150be075456139d7ff21a46be5ea4858ba0eed77723a3081ff5659522e2c3f0e8258203809753ed8904607fc12acf1cbdb1a209cee6d194baa16fe4d834553b63ce7ad58409822bbd49a88c8b988d858b7eff2aba2be5c3d0d0bb2b12fe76444d5db810d931f347b286921651f93422ec29fd712e874e72354e40ca3e35c3f176907e9e40e0582840000d87980821a00297f521a2caa4bad840100d8799f581c602a7e54f9c569c770ba6f732af3077d8b06e14b84abc8d0151635d8581c3ab25c853f0f188f43b34b2df5cb98737a4de7e19028ec9d1a414a55464e45574d5f30581c9bb822cdf2c6c79657c0e8ec24308487dbd35750c084e271620d9d8040ff821a0028f5f91a2cb19cb8f5d90103a100a11902d1a278383630326137653534663963353639633737306261366637333261663330373764386230366531346238346162633864303135313633356438a1664e45574d5f30b8186b616c62756d5f7469746c656d42696767657220447265616d73676172746973747381a1646e616d65644d55525369636f70797269676874827818c2a92032303232204d6f6f647377696e677a204d757a696b7829e284972032303232204d6f6f647377696e677a2043727970746f6d656469612047726f7570204c4c4371636f756e7472795f6f665f6f726967696e6d556e69746564205374617465736b6469737472696275746f726f68747470733a2f2f6e65776d2e696f686578706c696369746566616c73656566696c657382a3696d65646961547970656a617564696f2f666c6163646e616d656d42696767657220447265616d7363737263783061723a2f2f503134316f305244416a53596c565167544467484e414f5251546b4d5949564370726d445f644b4d567373a3696d65646961547970656f6170706c69636174696f6e2f706466646e616d65782153747265616d696e6720526f79616c74792053686172652041677265656d656e7463737263783061723a2f2f545779467778654f4978534c77707963556853686e677638687069616c41364445515045484a586244706f6667656e726573826748697020486f706352617065696d616765783061723a2f2f4375504659324c6e37795555684a583039473533306b645066393365476841566c686a727452374a68357764697372636f515a2d4e57372d32322d3230303435656c696e6b73a66654696b546f6b782768747470733a2f2f7777772e74696b746f6b2e636f6d2f406d6f6f647377696e677a6d757a696b6e6172746973745f74776974746572781868747470733a2f2f747769747465722e636f6d2f4d5552536866616365626f6f6b782e68747470733a2f2f7777772e66616365626f6f6b2e636f6d2f6d6f6f647377696e677a63727970746f6d6564696169696e7374616772616d782968747470733a2f2f7777772e696e7374616772616d2e636f6d2f6d6f6f647377696e677a6d757a696b6774776974746572782368747470733a2f2f747769747465722e636f6d2f6d6f6f647377696e677a6d757a696b6777656273697465781a687474703a2f2f4d6f6f647377696e677a4d757a696b2e636f6d696c797269636973747381644d555253726d6173746572696e675f656e67696e656572654162797373696d65646961547970656a696d6167652f776562706c6d69785f656e67696e656572654162797373646d6f6f64694665656c20476f6f64766d757369635f6d657461646174615f76657273696f6e01646e616d65744d555253202d2042696767657220447265616d736870726f64756365726541627973736c72656c656173655f747970656653696e676c656d736f6e675f6475726174696f6e665054344d30536a736f6e675f7469746c656d42696767657220447265616d736c747261636b5f6e756d626572016d76697375616c5f6172746973746541627973736776657273696f6e01"
        // }
    }

    @Test
    fun `test EvaluateTx old tx`() = runBlocking {
        createTxSubmitClient(
            websocketHost = "ogmios-kogmios-9ab819.us1.demeter.run",
            websocketPort = 443,
            secure = true,
        ).use { client ->
            val connectResult = client.connect()
            assertThat(connectResult).isTrue()
            assertThat(client.isConnected).isTrue()

            val response = client.evaluate(
                "84ab008382582035fc6dbcd0bfc2a48949db64e62fa7fc74b916a40b546d7b65bfc830e80035d70082582035fc6dbcd0bfc2a48949db64e62fa7fc74b916a40b546d7b65bfc830e80035d701825820949d496d900345508ed6e0b27b2a79a284fd3c37b7a3b7b01cece027fe1577aa010d81825820949d496d900345508ed6e0b27b2a79a284fd3c37b7a3b7b01cece027fe1577aa021282825820892e397590da7601e4ccbe113d4d01017083f60cbb2d651f5fb722cee73b0b1201825820892e397590da7601e4ccbe113d4d01017083f60cbb2d651f5fb722cee73b0b12020183a200581d609bb822cdf2c6c79657c0e8ec24308487dbd35750c084e271620d9d8001821a00100bf8a1581c602a7e54f9c569c770ba6f732af3077d8b06e14b84abc8d0151635d8a1464e45574d5f301a05f5e100a300581d7087692773cf94c4542105946daebe7afeb9100efb7a108158a2f9749c01821a0018fda8a1581c3ab25c853f0f188f43b34b2df5cb98737a4de7e19028ec9d1a414a55a1464e45574d5f3001028201d8185866d8799f581c602a7e54f9c569c770ba6f732af3077d8b06e14b84abc8d0151635d8581c3ab25c853f0f188f43b34b2df5cb98737a4de7e19028ec9d1a414a55464e45574d5f30581c9bb822cdf2c6c79657c0e8ec24308487dbd35750c084e271620d9d8040ffa200581d609bb822cdf2c6c79657c0e8ec24308487dbd35750c084e271620d9d80011a11d6de0d10a200581d609bb822cdf2c6c79657c0e8ec24308487dbd35750c084e271620d9d80011a003c88d7111a000fc269021a000a819b0e82581c2eb8686d882a0eddc9c7f68ece8f198f973ce90477b51ca017f2a25d581c4c1017ed05f703f6cf31c6a743f2c69534dbe4846e0d51ed4cb24b8509a1581c602a7e54f9c569c770ba6f732af3077d8b06e14b84abc8d0151635d8a1464e45574d5f301a05f5e1000b582003eedcb95f6cd5f18955f2e14cfada1385446e332476d00f24e2662373145ea907582057a48f6d612c79e1a5639b6e04f2e59bd9458ba69d5775614598bf592dfd3cc4a2008382582056ca6b314617c38c921a05885f055e9b470aa793dd5d0721bee45d7192a6f0f558405eebffeff6989916813fb848b9b0eb719664e28e68277235e2da00b03a40982543c9dcb41a8ee956f374f6d49c3f5471015b1b09ab00dea427657e9ce248d108825820161dfc32da5b2988f1a7f31737fddda7aed8d17c0935314a671c48034973d7fe584074d3f4212b15ceed9625f4a556f92409f4a5f985f89196537c3e4be4eee51850150be075456139d7ff21a46be5ea4858ba0eed77723a3081ff5659522e2c3f0e8258203809753ed8904607fc12acf1cbdb1a209cee6d194baa16fe4d834553b63ce7ad58409822bbd49a88c8b988d858b7eff2aba2be5c3d0d0bb2b12fe76444d5db810d931f347b286921651f93422ec29fd712e874e72354e40ca3e35c3f176907e9e40e0582840000d87980821a00297f521a2caa4bad840100d8799f581c602a7e54f9c569c770ba6f732af3077d8b06e14b84abc8d0151635d8581c3ab25c853f0f188f43b34b2df5cb98737a4de7e19028ec9d1a414a55464e45574d5f30581c9bb822cdf2c6c79657c0e8ec24308487dbd35750c084e271620d9d8040ff821a0028f5f91a2cb19cb8f5d90103a100a11902d1a278383630326137653534663963353639633737306261366637333261663330373764386230366531346238346162633864303135313633356438a1664e45574d5f30b8186b616c62756d5f7469746c656d42696767657220447265616d73676172746973747381a1646e616d65644d55525369636f70797269676874827818c2a92032303232204d6f6f647377696e677a204d757a696b7829e284972032303232204d6f6f647377696e677a2043727970746f6d656469612047726f7570204c4c4371636f756e7472795f6f665f6f726967696e6d556e69746564205374617465736b6469737472696275746f726f68747470733a2f2f6e65776d2e696f686578706c696369746566616c73656566696c657382a3696d65646961547970656a617564696f2f666c6163646e616d656d42696767657220447265616d7363737263783061723a2f2f503134316f305244416a53596c565167544467484e414f5251546b4d5949564370726d445f644b4d567373a3696d65646961547970656f6170706c69636174696f6e2f706466646e616d65782153747265616d696e6720526f79616c74792053686172652041677265656d656e7463737263783061723a2f2f545779467778654f4978534c77707963556853686e677638687069616c41364445515045484a586244706f6667656e726573826748697020486f706352617065696d616765783061723a2f2f4375504659324c6e37795555684a583039473533306b645066393365476841566c686a727452374a68357764697372636f515a2d4e57372d32322d3230303435656c696e6b73a66654696b546f6b782768747470733a2f2f7777772e74696b746f6b2e636f6d2f406d6f6f647377696e677a6d757a696b6e6172746973745f74776974746572781868747470733a2f2f747769747465722e636f6d2f4d5552536866616365626f6f6b782e68747470733a2f2f7777772e66616365626f6f6b2e636f6d2f6d6f6f647377696e677a63727970746f6d6564696169696e7374616772616d782968747470733a2f2f7777772e696e7374616772616d2e636f6d2f6d6f6f647377696e677a6d757a696b6774776974746572782368747470733a2f2f747769747465722e636f6d2f6d6f6f647377696e677a6d757a696b6777656273697465781a687474703a2f2f4d6f6f647377696e677a4d757a696b2e636f6d696c797269636973747381644d555253726d6173746572696e675f656e67696e656572654162797373696d65646961547970656a696d6167652f776562706c6d69785f656e67696e656572654162797373646d6f6f64694665656c20476f6f64766d757369635f6d657461646174615f76657273696f6e01646e616d65744d555253202d2042696767657220447265616d736870726f64756365726541627973736c72656c656173655f747970656653696e676c656d736f6e675f6475726174696f6e665054344d30536a736f6e675f7469746c656d42696767657220447265616d736c747261636b5f6e756d626572016d76697375616c5f6172746973746541627973736776657273696f6e01",
            )
            assertThat(response).isNotNull()
            assertThat(response.result).isInstanceOf(EvaluationFailureTxResult::class.java)
            println(response.result)
        }
    }
}
